  rollback-prod:
    needs: deploy-prod
    runs-on: ubuntu-latest
    if: needs.deploy-prod.result == 'failure'
    steps:
      - name: Checkout (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Find previous prod tag
        id: prevtag
        run: |
          git fetch --tags
          # list prod-* tags sorted by creatordate desc, take first tag that is not the one we just created
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          echo "current=$CURRENT_TAG"
          mapfile -t tags < <(git tag --list 'prod-*' --sort=-creatordate)
          PREV_TAG=""
          for t in "${tags[@]}"; do
            if [ "$t" != "$CURRENT_TAG" ]; then
              PREV_TAG="$t"
              break
            fi
          done
          if [ -z "$PREV_TAG" ]; then
            echo "No previous prod tag found, will try to use latest preprod tag"
            mapfile -t tags2 < <(git tag --list 'preprod-*' --sort=-creatordate)
            PREV_TAG=${tags2[0]:-}
          fi
          echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT

      - name: Fail if no previous tag
        if: steps.prevtag.outputs.prev_tag == ''
        run: |
          echo "No previous tag to rollback to. Manual intervention required."
          exit 1

      - name: Checkout previous tag
        run: |
          git checkout ${{ steps.prevtag.outputs.prev_tag }}
          echo "Checked out ${{ steps.prevtag.outputs.prev_tag }}"

      - name: Build checked out tag
        run: |
          npm ci
          npm run build

      - name: Deploy previous tag to PROD via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          PROD_USER: ${{ secrets.PROD_SSH_USER }}
          PROD_HOST: ${{ secrets.PROD_SSH_HOST }}
          PROD_PATH: ${{ secrets.PROD_DEPLOY_PATH }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          rsync -avz --delete .next package.json package-lock.json $PROD_USER@$PROD_HOST:$PROD_PATH/
          ssh $PROD_USER@$PROD_HOST "cd $PROD_PATH && npm ci --production && pm2 restart next || pm2 start npm --name next -- start"
